basePath: /
definitions:
  models.Product:
    description: Product entity
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      partner_id:
        type: string
      price:
        type: number
      stock:
        type: integer
      updated_at:
        type: string
    type: object
  models.ProductUpdateRequest:
    description: Product update request
    properties:
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
host: localhost:8082
info:
  contact: {}
  description: API documentation for the Product Service.
  title: SFConnect Product Service API
  version: "1.0"
paths:
  /products:
    get:
      description: Get a list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product (partner only)
      parameters:
      - description: Product info
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete a product by ID (partner only)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a product
      tags:
      - products
    get:
      description: Get a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product by ID (partner only)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product update info
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.ProductUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a product
      tags:
      - products
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
